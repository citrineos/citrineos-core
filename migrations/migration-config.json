{
  "versions": {
    "1.8.0": {
      "description": "Multi-tenant support and authorization flattening",
      "timestamp_range": {
        "start": "20250430000000",
        "end": "20250715999999"
      },
      "features": [
        "Multi-tenant architecture with Tenants table",
        "Authorization schema flattening for better performance",
        "Async job status tracking for background operations",
        "Tenant partner relationships",
        "Enhanced OCPI integration fields"
      ],
      "migrations": [
        "20250430105500-create-tenants-table.ts",
        "20250430110000-create-default-tenant.ts",
        "20250430130000-update-existing-tables-to-include-default-tenant.ts",
        "20250618150000-update-authorizations-to-include-concurrenttransaction.ts",
        "20250618150800-update-existing-authorization-to-include-realtimeauth.ts",
        "20250621120000-flatten-authorization.ts",
        "20250714120500-create-tenant-partner-table.ts",
        "20250714121000-alter-tenants-table-add-ocpi-fields.ts",
        "20250715000000-create-async-job-status.ts"
      ],
      "breaking_changes": [
        "Authorization table schema has been flattened - data migration required",
        "All existing tables now require tenantId - automatic assignment to default tenant"
      ],
      "upgrade_notes": [
        "Use the consolidated v1.8.0 migration for new installations",
        "Existing installations should run individual migrations in sequence",
        "Backup database before running authorization flattening migration"
      ]
    },
    "1.9.0": {
      "description": "Enhanced OCPP 2.0.1 features and performance improvements",
      "timestamp_range": {
        "start": "20250716000000",
        "end": "20250831999999"
      },
      "features": [],
      "migrations": [],
      "breaking_changes": [],
      "upgrade_notes": []
    }
  },
  "migration_strategy": {
    "individual": {
      "description": "Run individual migrations in chronological order",
      "recommended_for": "Existing installations with partial migrations applied",
      "command": "npx sequelize-cli db:migrate"
    },
    "consolidated": {
      "description": "Run version-specific consolidated migrations",
      "recommended_for": "New installations or major version upgrades",
      "command": "node scripts/run-consolidated-migration.js"
    }
  },
  "rollback_strategy": {
    "individual": "npx sequelize-cli db:migrate:undo",
    "consolidated": "node scripts/rollback-consolidated-migration.js"
  },
  "validation": {
    "pre_migration": [
      "Verify database backup exists",
      "Check disk space for migration operations",
      "Validate current schema version"
    ],
    "post_migration": [
      "Run database integrity checks",
      "Verify data migration completeness",
      "Test application startup"
    ]
  }
}
