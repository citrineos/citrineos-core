// Copyright (c) 2023 S44, LLC
// Copyright Contributors to the CitrineOS Project
//
// SPDX-License-Identifier: Apache 2.0

import { IVariableDto, OCPP2_0_1, OCPP2_0_1_Namespace } from '@citrineos/base';
import { BelongsToMany, Column, DataType, HasMany, HasOne, Table } from 'sequelize-typescript';
import { Component } from './Component';
import { VariableAttribute } from './VariableAttribute';
import { VariableCharacteristics } from './VariableCharacteristics';
import { ComponentVariable } from './ComponentVariable';
import { BaseModelWithTenant } from '../BaseModelWithTenant';

@Table({
  indexes: [
    {
      unique: true,
      fields: ['name'],
      where: {
        instance: null,
      },
    },
  ],
})
export class Variable extends BaseModelWithTenant implements OCPP2_0_1.VariableType, IVariableDto {
  static readonly MODEL_NAME: string = OCPP2_0_1_Namespace.VariableType;

  /**
   * Fields
   */

  @Column({
    type: DataType.STRING,
    unique: 'name_instance',
  })
  declare name: string;

  @Column({
    type: DataType.STRING,
    unique: 'name_instance',
  })
  declare instance?: string | null;

  /**
   * Relations
   */

  @BelongsToMany(() => Component, () => ComponentVariable)
  declare components?: Component[];

  @HasMany(() => VariableAttribute)
  declare variableAttributes?: VariableAttribute[];

  @HasOne(() => VariableCharacteristics)
  declare variableCharacteristics?: VariableCharacteristics;

  declare customData?: OCPP2_0_1.CustomDataType | null;

  // Declare the association methods, to be automatically generated by Sequelize at runtime
  public addComponent!: (variable: Component) => Promise<void>;
  public getComponents!: () => Promise<Component[]>;
}
